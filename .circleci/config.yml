version: 2.1

commands:
  setup_python:
    description: "Install the specified Python version"
    parameters:
      python-version:
        type: string
        default: "3.8"
    steps:
      - run:
          name: Install Python << parameters.python-version >>
          command: |
            sudo apt-get update
            sudo apt-get install -y python<< parameters.python-version >> python<< parameters.python-version >>-pip
            python<< parameters.python-version >> -m pip install --upgrade pip

  setup_dependencies:
    description: "Install dependencies for GROMACS"
    steps:
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y software-properties-common build-essential ccache libblas-dev libfftw3-dev liblapack-dev libmpich-dev libxml2-dev mpich ninja-build
            wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
            sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main' -y
            wget http://archive.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.1f-1ubuntu2_amd64.deb
            sudo dpkg -i ./libssl1.1_1.1.1f-1ubuntu2_amd64.deb
            rm -f libssl1.1_1.1.1f-1ubuntu2_amd64.deb
            sudo apt install cmake && cmake --version

  install_gromacs:
    description: "Install the latest version of GROMACS"
    parameters:
      python-version:
        type: string
        default: "3.8"
    steps:
      - run:
          name: Install GROMACS
          command: |
            gcc --version
            g++ --version 
            python<< parameters.python-version >> --version
            export CC=`which gcc`
            export CXX=`which g++`
            cd $HOME && mkdir pkgs 
            git clone https://gitlab.com/gromacs/gromacs.git
            cd gromacs && mkdir build && cd build
            cmake .. -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_C_COMPILER=$CC -DCMAKE_INSTALL_PREFIX=$HOME/pkgs
            make install 
            source $HOME/pkgs/bin/GMXRC
            gmx --version

  install_ensemble_md:
    description: "Install the ensemble_md package"
    parameters:
      python-version:
        type: string
        default: "3.8"
    steps:
      - run:
          name: Install ensemble_md
          command: |
            python<< parameters.python-version >> -m pip install --upgrade pip
            python<< parameters.python-version >> -m pip install .

  run_tests:
    description: "Run unit tests"
    parameters:
      python-version:
        type: string
        default: "3.8"
    steps:
      - run:
          name: Run unit tests
          command: |
            source $HOME/pkgs/bin/GMXRC
            python<< parameters.python-version >> -m pip install pytest pytest-mpi pytest-cov
            coverage run -m pytest -vv --disable-pytest-warnings --color=yes ensemble_md/tests
            mpirun -np 4 coverage run --rcfile setup.cfg -m pytest ensemble_md/tests/test_mpi_func.py --with-mpi -vv --disable-pytest-warnings --color=yes
            coverage combine

  codecov:
    description: "Upload coverage results to CodeCov"
    steps:
      - run:
          name: CodeCov
          command: |
            bash <(curl -s https://codecov.io/bash)

jobs:
  test:
    machine:
      image: ubuntu-2004:202101-01
    parameters:
      python-version:
        type: string
        default: "3.8"
    resource_class: large
    steps:
      - checkout
      - setup_python:
          python-version: << parameters.python-version >>
      - setup_dependencies
      - install_gromacs:
          python-version: << parameters.python-version >>
      - install_ensemble_md:
          python-version: << parameters.python-version >>
      - run_tests:
          python-version: << parameters.python-version >>
      - codecov

workflows:
  continuous-integration:
    jobs:
      - test:
          name: test-python-3.8
          python-version: "3.8"
      - test:
          name: test-python-3.9
          python-version: "3.9"
      - test:
          name: test-python-3.10
          python-version: "3.10"
      - test:
          name: test-python-3.11
          python-version: "3.11"
